{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJs-Training\\\\upload-image-react\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedFile: null,\n      images: []\n    };\n\n    this.fileSelectHandler_uploader = event => {\n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n      console.log('selectedFile', this.state.selectedFile);\n    };\n\n    this.fileSelectHandler_viewer = event => {\n      event.preventDefault();\n      console.log(event.target.files[0]);\n      const imageFiles = event.target.files; //document.getElementById(\"image\"); //It gives all the uploaded images\n\n      const filesLength = imageFiles.length; // imageFiles.files.length;\n\n      for (var i = 0; i < filesLength; i++) {\n        let reader = new FileReader();\n        let file = imageFiles[i];\n\n        reader.onloadend = () => {\n          this.setState({\n            images: this.state.images.concat(reader.result)\n          });\n        };\n\n        reader.readAsDataURL(file);\n      } //this.setState({selectedFile:event.target.files[0]});\n\n    };\n\n    this.fileUploadHandler = () => {\n      axios.post('').then(res => console.log(res)).catch(err => console.log(err));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container-fluid mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row p-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      className: \"form-control\",\n      onChange: this.fileSelectHandler_viewer,\n      onChange: this.fileSelectHandler_uploader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.fileUploadHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Upload Image\")))), React.createElement(\"div\", {\n      className: \"row m-5 p-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.state.images.map((img, index) => {\n      return React.createElement(\"img\", {\n        src: img,\n        width: \"100px\",\n        height: \"100px\",\n        style: {\n          margin: '20px'\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      });\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:\\ReactJs-Training\\upload-image-react\\src\\App.js"],"names":["React","Component","axios","App","state","selectedFile","images","fileSelectHandler_uploader","event","setState","target","files","console","log","fileSelectHandler_viewer","preventDefault","imageFiles","filesLength","length","i","reader","FileReader","file","onloadend","concat","result","readAsDataURL","fileUploadHandler","post","then","res","catch","err","render","map","img","index","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,OAAO,kCAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAOC,GAAP,SAAmBF,SAAnB,CAA4B;AAAA;AAAA;AAAA,SAE1BG,KAF0B,GAEpB;AACJC,MAAAA,YAAY,EAAC,IADT;AAEJC,MAAAA,MAAM,EAAC;AAFH,KAFoB;;AAAA,SAM1BC,0BAN0B,GAMEC,KAAD,IAAS;AAChC,WAAKC,QAAL,CAAc;AAACJ,QAAAA,YAAY,EAACG,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB;AAAd,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2B,KAAKT,KAAL,CAAWC,YAAtC;AACH,KATyB;;AAAA,SAW1BS,wBAX0B,GAWAN,KAAD,IAAS;AAC9BA,MAAAA,KAAK,CAACO,cAAN;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAZ;AACA,YAAMK,UAAU,GAAGR,KAAK,CAACE,MAAN,CAAaC,KAAhC,CAH8B,CAGS;;AACvC,YAAMM,WAAW,GAAGD,UAAU,CAACE,MAA/B,CAJ8B,CAIS;;AAEvC,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,WAAnB,EAAgCE,CAAC,EAAjC,EAAqC;AACjC,YAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACA,YAAIC,IAAI,GAAGN,UAAU,CAACG,CAAD,CAArB;;AAEAC,QAAAA,MAAM,CAACG,SAAP,GAAmB,MAAM;AACrB,eAAKd,QAAL,CAAc;AAACH,YAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWE,MAAX,CAAkBkB,MAAlB,CAAyBJ,MAAM,CAACK,MAAhC;AAAT,WAAd;AACH,SAFD;;AAIAL,QAAAA,MAAM,CAACM,aAAP,CAAqBJ,IAArB;AACH,OAf6B,CAgBhC;;AACD,KA5ByB;;AAAA,SA6B1BK,iBA7B0B,GA6BR,MAAI;AACpBzB,MAAAA,KAAK,CAAC0B,IAAN,CAAW,EAAX,EAAeC,IAAf,CAAoBC,GAAG,IAAElB,OAAO,CAACC,GAAR,CAAYiB,GAAZ,CAAzB,EAA2CC,KAA3C,CAAiDC,GAAG,IAAEpB,OAAO,CAACC,GAAR,CAAYmB,GAAZ,CAAtD;AACD,KA/ByB;AAAA;;AAgC3BC,EAAAA,MAAM,GAAE;AACN,WACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,cAA7B;AAA4C,MAAA,QAAQ,EAAE,KAAKnB,wBAA3D;AAAqF,MAAA,QAAQ,EAAE,KAAKP,0BAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,KAAKoB,iBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,CADJ,CADJ,CADJ,EASI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK,KAAKvB,KAAL,CAAWE,MAAX,CAAkB4B,GAAlB,CAAsB,CAACC,GAAD,EAAMC,KAAN,KAAc;AACjC,aAAO;AAAK,QAAA,GAAG,EAAED,GAAV;AAAe,QAAA,KAAK,EAAC,OAArB;AAA6B,QAAA,MAAM,EAAC,OAApC;AAA4C,QAAA,KAAK,EAAE;AAACE,UAAAA,MAAM,EAAE;AAAT,SAAnD;AAAqE,QAAA,GAAG,EAAED,KAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFA,CAFL,CATJ,CADF,CADJ;AAoBD;;AArD0B;;AAwD5B,eAAejC,GAAf","sourcesContent":["import React,{Component} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport axios from 'axios';\n\nclass  App extends Component{\n\n  state={\n    selectedFile:null,\n    images:[]\n  };\n  fileSelectHandler_uploader=(event)=>{\n      this.setState({selectedFile:event.target.files[0]});\n      console.log('selectedFile',this.state.selectedFile);\n  };\n\n  fileSelectHandler_viewer=(event)=>{\n      event.preventDefault();\n      console.log(event.target.files[0]);\n      const imageFiles = event.target.files; //document.getElementById(\"image\"); //It gives all the uploaded images\n      const filesLength = imageFiles.length; // imageFiles.files.length;\n\n      for(var i = 0; i < filesLength; i++) {\n          let reader = new FileReader();\n          let file = imageFiles[i];\n\n          reader.onloadend = () => {\n              this.setState({images: this.state.images.concat(reader.result)} );\n          }\n\n          reader.readAsDataURL(file);\n      }\n    //this.setState({selectedFile:event.target.files[0]});\n  };\n  fileUploadHandler=()=>{\n    axios.post('').then(res=>console.log(res)).catch(err=>console.log(err));\n  };\n render(){\n   return (\n       <div className=\"App\">\n         <div className=\"container-fluid mt-5\">\n             <div className=\"row p-5\">\n                 <form>\n                     <div className=\"input-group\">\n                         <input type=\"file\" className=\"form-control\" onChange={this.fileSelectHandler_viewer} onChange={this.fileSelectHandler_uploader}/>\n                         <button className=\"btn btn-primary\" onClick={this.fileUploadHandler}>Upload Image</button>\n                     </div>\n                 </form>\n             </div>\n             <div className=\"row m-5 p-5\">\n                 {/*<img src={this.state.images[0]} width=\"100px\" height=\"100px\" />*/}\n                 {this.state.images.map((img, index)=>{\n                     return <img src={img} width=\"100px\" height=\"100px\" style={{margin: '20px'}} key={index}/>\n                 })}\n             </div>\n         </div>\n       </div>\n   );\n }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}