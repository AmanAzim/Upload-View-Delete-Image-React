{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJs-Training\\\\upload-image-react\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport axios from 'axios';\nimport { storageRef } from './firebase/index';\nimport UploadedImage from './UploadedImage';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      filesToUpload: [],\n      images: [],\n      uploadedImagesUrl: [],\n      progress: 0\n    };\n\n    this.upload_preview_handler = event => {\n      this.fileSelectHandler_uploader(event);\n      this.fileSelectHandler_viewer(event);\n    };\n\n    this.fileSelectHandler_uploader = event => {\n      //this.setState({selectedFile:event.target.files[0]});\n      const selectedFile = event.target.files[0];\n      this.setState(prevState => {\n        return {\n          filesToUpload: [...prevState.filesToUpload, selectedFile]\n        };\n      }, () => {\n        console.log('selectedFile', this.state.filesToUpload);\n      });\n    };\n\n    this.fileSelectHandler_viewer = event => {\n      event.preventDefault();\n      console.log(event.target.files[0]);\n      const imageFiles = event.target.files; //document.getElementById(\"image\"); //It gives all the uploaded images\n\n      const filesLength = imageFiles.length; // imageFiles.files.length;\n\n      for (var i = 0; i < filesLength; i++) {\n        let reader = new FileReader();\n        let file = imageFiles[i];\n\n        reader.onloadend = () => {\n          this.setState({\n            images: this.state.images.concat(reader.result)\n          });\n        };\n\n        reader.readAsDataURL(file);\n      } //this.setState({selectedFile:event.target.files[0]});\n\n    };\n\n    this.fileUploadHandler = event => {\n      event.preventDefault();\n      this.state.filesToUpload.forEach(file => {\n        console.log('uploading', file.name);\n        const uploadTask = storageRef.child('my_images/' + file.name).put(file);\n        uploadTask.on('state_changed', snapshot => {\n          /*indicates Progress*/\n          let uploadProgress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n          this.setState(prevState => {\n            return {\n              progress: prevState.progress + uploadProgress\n            };\n          });\n        }, error => {\n          console.log(error);\n        }, () => {\n          /*Indicates task Completation*/\n          //If successful then get the url of the uploaded image\n          uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n            console.log('File available at', downloadURL);\n            this.setState(prevState => {\n              return {\n                uploadedImagesUrl: [...prevState.uploadedImagesUrl, downloadURL],\n                progress: 0\n              };\n            });\n          });\n        });\n      });\n    };\n\n    this.deleteFileHandler = index => {\n      let tempImages = [...this.state.images];\n      tempImages.splice(index, 1);\n      this.setState({\n        images: tempImages\n      });\n      let tempfilesToUpload = [...this.state.filesToUpload];\n      const imageName = tempfilesToUpload[index].name;\n      tempfilesToUpload.splice(index, 1);\n      this.setState({\n        filesToUpload: tempfilesToUpload\n      });\n      var desertRef = storageRef.child('my_images/' + imageName); //// Create a reference to the file to delete\n      // Delete the file\n\n      desertRef.delete().then(() => {\n        let tempUploadedImagesUrl = [...this.state.uploadedImagesUrl];\n        tempfilesToUpload.splice(index, 1);\n        this.setState({\n          uploadedImagesUrl: tempUploadedImagesUrl\n        });\n        alert(imageName + ' is deleted');\n      }).catch(error => console.log(error));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container-fluid mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row p-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"offset-md-3 col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      className: \"form-control\",\n      onChange: this.upload_preview_handler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"offset-md-3 col-md-6 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.fileUploadHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Upload Image\")), React.createElement(\"div\", {\n      className: \"offset-md-3 col-md-6 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"progress\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"progress-bar\",\n      style: {\n        width: this.state.progress + '%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"row mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"mt-2 mb-2 text-center col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Your selected images:\")), React.createElement(\"div\", {\n      className: \"row mt-2 mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"offset-md-2 col-md-8 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, this.state.images.map((img, index) => {\n      return React.createElement(\"div\", {\n        style: {\n          margin: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: img,\n        width: \"100px\",\n        height: \"100px\",\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: () => this.deleteFileHandler(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Delete\"));\n    }))), React.createElement(\"div\", {\n      className: \"row mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"offset-md-3 col-md-6 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Your uploaded images:\"), React.createElement(\"div\", {\n      className: \"offset-md-3 col-md-6 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(UploadedImage, {\n      uploadedImagesUrl: this.state.uploadedImagesUrl,\n      width: \"100px\",\n      height: \"100px\",\n      style: {\n        margin: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:\\ReactJs-Training\\upload-image-react\\src\\App.js"],"names":["React","Component","axios","storageRef","UploadedImage","App","state","filesToUpload","images","uploadedImagesUrl","progress","upload_preview_handler","event","fileSelectHandler_uploader","fileSelectHandler_viewer","selectedFile","target","files","setState","prevState","console","log","preventDefault","imageFiles","filesLength","length","i","reader","FileReader","file","onloadend","concat","result","readAsDataURL","fileUploadHandler","forEach","name","uploadTask","child","put","on","snapshot","uploadProgress","Math","round","bytesTransferred","totalBytes","error","ref","getDownloadURL","then","downloadURL","deleteFileHandler","index","tempImages","splice","tempfilesToUpload","imageName","desertRef","delete","tempUploadedImagesUrl","alert","catch","render","width","map","img","margin"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport axios from 'axios';\nimport {storageRef} from './firebase/index';\nimport UploadedImage from './UploadedImage';\n\nclass  App extends Component{\n\n  state={\n    filesToUpload:[],\n    images:[],\n    uploadedImagesUrl:[],\n    progress:0,\n  };\n\n  upload_preview_handler=(event)=>{\n      this.fileSelectHandler_uploader(event);\n      this.fileSelectHandler_viewer(event);\n  };\n\n  fileSelectHandler_uploader=(event)=>{\n      //this.setState({selectedFile:event.target.files[0]});\n      const selectedFile=event.target.files[0];\n      this.setState((prevState)=>{\n          return {\n              filesToUpload:[...prevState.filesToUpload, selectedFile]\n          }\n      }, ()=>{console.log('selectedFile',this.state.filesToUpload);});\n\n  };\n\n  fileSelectHandler_viewer=(event)=>{\n      event.preventDefault();\n      console.log(event.target.files[0]);\n      const imageFiles = event.target.files; //document.getElementById(\"image\"); //It gives all the uploaded images\n      const filesLength = imageFiles.length; // imageFiles.files.length;\n\n      for(var i = 0; i < filesLength; i++) {\n          let reader = new FileReader();\n          let file = imageFiles[i];\n\n          reader.onloadend = () => {\n              this.setState({images: this.state.images.concat(reader.result)} );\n          };\n\n          reader.readAsDataURL(file);\n      }\n    //this.setState({selectedFile:event.target.files[0]});\n  };\n\n  fileUploadHandler=(event)=>{\n      event.preventDefault();\n\n    this.state.filesToUpload.forEach((file)=>{\n      console.log('uploading',file.name)\n        const uploadTask=storageRef.child('my_images/'+file.name).put(file);\n\n        uploadTask.on('state_changed', (snapshot)=>{\n            /*indicates Progress*/\n            let uploadProgress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\n            this.setState((prevState)=>{\n                return {progress:prevState.progress+uploadProgress}\n            })\n\n        }, (error)=>{\n            console.log(error)\n        }, ()=>{\n            /*Indicates task Completation*/\n            //If successful then get the url of the uploaded image\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL)=>{\n                console.log('File available at', downloadURL);\n                this.setState((prevState)=>{\n                    return { uploadedImagesUrl:[...prevState.uploadedImagesUrl, downloadURL], progress:0 }\n                });\n            });\n        });\n    });\n\n  };\n\n  deleteFileHandler=(index)=>{\n      let tempImages=[...this.state.images];\n      tempImages.splice(index, 1);\n      this.setState({images:tempImages});\n\n      let tempfilesToUpload=[...this.state.filesToUpload];\n      const imageName=tempfilesToUpload[index].name;\n      tempfilesToUpload.splice(index, 1);\n      this.setState({filesToUpload:tempfilesToUpload});\n\n\n\n      var desertRef = storageRef.child('my_images/'+imageName);//// Create a reference to the file to delete\n\n      // Delete the file\n      desertRef.delete().then(()=>{\n          let tempUploadedImagesUrl=[...this.state.uploadedImagesUrl];\n          tempfilesToUpload.splice(index, 1);\n          this.setState({uploadedImagesUrl:tempUploadedImagesUrl});\n          alert(imageName+' is deleted');\n      }).catch((error)=>console.log(error));\n  };\n\n render(){\n\n   return (\n       <div className=\"App\">\n         <div className=\"container-fluid mt-5\">\n\n             <div className=\"row p-5\">\n                <div className=\"offset-md-3 col-md-6\">\n                    <form>\n                        <div className=\"input-group text-center\">\n                            <input type=\"file\" className=\"form-control\"  onChange={this.upload_preview_handler}/>\n                        </div>\n                    </form>\n                </div>\n                 <div className=\"offset-md-3 col-md-6 mt-3\">\n                     <button className=\"btn btn-primary\" onClick={this.fileUploadHandler}>Upload Image</button>\n                 </div>\n                 <div className=\"offset-md-3 col-md-6 mt-3\">\n                     <div className=\"progress\">\n                         <div className=\"progress-bar\"  style={{width:this.state.progress+'%'}}></div>\n                     </div>\n                 </div>\n             </div>\n\n             <div className=\"row mt-5\">\n                 <h5 className=\"mt-2 mb-2 text-center col-sm-12\">Your selected images:</h5>\n             </div>\n             <div className=\"row mt-2 mb-2\">\n                 <div className=\"offset-md-2 col-md-8 mt-3\">\n                     {/*<img src={this.state.images[0]} width=\"100px\" height=\"100px\" />*/}\n                     {this.state.images.map((img, index)=>{\n                         return (\n                             <div style={{margin: '20px'}}>\n                                 <img src={img} width=\"100px\" height=\"100px\"  key={index}/><br/>\n                                 <button className=\"btn btn-danger\" onClick={()=>this.deleteFileHandler(index)}>Delete</button>\n                             </div>\n                         )\n                     })}\n                 </div>\n             </div>\n\n             <div className=\"row mt-2\">\n                 <h5 className=\"offset-md-3 col-md-6 mt-3\">Your uploaded images:</h5>\n                 <div className=\"offset-md-3 col-md-6 mt-3\">\n                    \n                     <UploadedImage uploadedImagesUrl={this.state.uploadedImagesUrl} width=\"100px\" height=\"100px\" style={{margin: '20px'}}/>\n                 </div>\n             </div>\n\n         </div>\n       </div>\n   );\n }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}